module HW.PS2.KBSet;

// Uses the HID Usage Table for Keyboards
// 10. Table 12, http://www.usb.org/developers/hidpage/Hut1_12v2.pdf
enum KeyCode : ubyte {
	None,
	ErrorRollover,
	PostFail,
	ErrorUndefined,

	/* 0x04 / 4 */
	A,
	B,
	C,
	D,
	E,
	F,
	G,
	H,
	I,
	J,
	K,
	L,
	M,
	N,
	O,
	P,
	Q,
	R,
	S,
	T,
	U,
	V,
	W,
	X,
	Y,
	Z,

	/* 0x1E / 30 */
	_1,
	_2,
	_3,
	_4,
	_5,
	_6,
	_7,
	_8,
	_9,
	_0,

	Return,
	Escape,
	Backspace,
	Tab,
	Space,
	Minus,
	Equals,
	SquareOpen,
	SquareClose,
	Backslash,
	NonUSHashTilde,
	Semicolon,
	Quote,
	GraveTilde,
	Comma,
	Dot,
	Slash,
	CapsLock,
	F1,
	F2,
	F3,
	F4,
	F5,
	F6,
	F7,
	F8,
	F9,
	F10,
	F11,
	F12,
	PrintScreen,
	ScrollLock,
	Pause,
	Insert,
	Home,
	PageUp,
	Delete,
	End,
	PageDown,
	RightArrow,
	LeftArrow,
	DownArrow,
	UpArrow,

	NumLock,
	KPSlash,
	KPStar,
	KPMinus,
	KPPlus,
	KPReturn,
	KP1,
	KP2,
	KP3,
	KP4,
	KP5,
	KP6,
	KP7,
	KP8,
	KP9,
	KP0,
	KPPeriod,

	NonUSBackslash,
	Application,
	Power,
	KPEquals,

	F13,
	F14,
	F15,
	F16,
	F17,
	F18,
	F19,
	F20,
	F21,
	F22,
	F23,
	F24,
	Execute,
	Help,
	Menu,
	Select,
	Stop,
	Again,
	Undo,
	Cut,
	Copy,
	Paste,
	Find,
	Mute,
	VolumeUp,
	VolumeDown,
	LockingCaps, /* Physically toggles */
	LockingNum,
	LockingScroll,
	KPComma,
	KPEqualSign,
	International1,
	International2,
	International3,
	International4,
	International5,
	International6,
	International7,
	International8,
	International9,

	Lang1,
	Lang2,
	Lang3,
	Lang4,
	Lang5,
	Lang6,
	Lang7,
	Lang8,
	Lang9,

	AltErase,
	SysReq,
	Cancle,
	Clear,
	Prior,
	Return2,
	Separator,
	Out,
	Oper,

	LeftCtrl = 0xE0,
	LeftShift,
	LeftAlt,
	LeftGUI,
	RightCtrl,
	RightShift,
	RightAlt,
	RightGUI,

	MaxValue = 0xFF
}

private alias PS2Layout = PS2LayoutEN_US;
private alias ShiftedCharTranslation = ShiftedCharTranslationEN_US;
private alias ShiftedEtcTranslation = ShiftedEtcTranslationEN_US;
private alias KeypadTranslation = KeypadTranslationEN_US;
private alias NormalTranslation = NormalTranslationEN_US;

KeyCode FindKeycode(ushort id) {
	return PS2Layout[id];
}

dchar FindShiftedCharTranslate(KeyCode key) {
	return ShiftedCharTranslation[key];
}

dchar FindShiftedEtcTranslate(KeyCode key) {
	return ShiftedEtcTranslation[key];
}

dchar FindKeypadTranslate(KeyCode key) {
	return KeypadTranslation[key];
}

dchar FindNormalTranslate(KeyCode key) {
	return NormalTranslation[key];
}

enum E0Bit = 0x80;
enum E1Bit = 0x100;

// dfmt off
private __gshared KeyCode[512] PS2LayoutEN_US = [
	        0x0e: KeyCode.GraveTilde,
	        0x16: KeyCode._1,
	        0x1e: KeyCode._2,
	        0x26: KeyCode._3,
	        0x25: KeyCode._4,
	        0x2e: KeyCode._5,
	        0x36: KeyCode._6,
	        0x3d: KeyCode._7,
	        0x3e: KeyCode._8,
	        0x46: KeyCode._9,
	        0x45: KeyCode._0,
	        0x4e: KeyCode.Minus,
	        0x55: KeyCode.Equals,
	        0x66: KeyCode.Backspace,

	        0x0d: KeyCode.Tab,
	        0x15: KeyCode.Q,
	        0x1d: KeyCode.W,
	        0x24: KeyCode.E,
	        0x2d: KeyCode.R,
	        0x2c: KeyCode.T,
	        0x35: KeyCode.Y,
	        0x3c: KeyCode.U,
	        0x43: KeyCode.I,
	        0x44: KeyCode.O,
	        0x4d: KeyCode.P,
	        0x54: KeyCode.SquareOpen,
	        0x5b: KeyCode.SquareClose,
	        0x5d: KeyCode.Backslash,

	        0x58: KeyCode.CapsLock,
	        0x1c: KeyCode.A,
	        0x1b: KeyCode.S,
	        0x23: KeyCode.D,
	        0x2b: KeyCode.F,
	        0x34: KeyCode.G,
	        0x33: KeyCode.H,
	        0x3b: KeyCode.J,
	        0x42: KeyCode.K,
	        0x4b: KeyCode.L,
	        0x4c: KeyCode.Semicolon,
	        0x52: KeyCode.Quote,
	        0x5a: KeyCode.Return,

	        0x12: KeyCode.LeftShift,
	        0x1a: KeyCode.Z,
	        0x22: KeyCode.X,
	        0x21: KeyCode.C,
	        0x2a: KeyCode.V,
	        0x32: KeyCode.B,
	        0x31: KeyCode.N,
	        0x3a: KeyCode.M,
	        0x41: KeyCode.Comma,
	        0x49: KeyCode.Dot,
	        0x4a: KeyCode.Slash,
	        0x59: KeyCode.RightShift,

	        0x14: KeyCode.LeftCtrl,
	        0x11: KeyCode.LeftAlt,
	        0x29: KeyCode.Space,
	E0Bit | 0x11: KeyCode.RightAlt,
	E0Bit | 0x14: KeyCode.RightCtrl,

	E0Bit | 0x70: KeyCode.Insert,
	E0Bit | 0x71: KeyCode.Delete,
	E0Bit | 0x6c: KeyCode.Home,
	E0Bit | 0x69: KeyCode.End,
	E0Bit | 0x7d: KeyCode.PageUp,
	E0Bit | 0x7a: KeyCode.PageDown,

	E0Bit | 0x6b: KeyCode.LeftArrow,
	E0Bit | 0x75: KeyCode.UpArrow,
	E0Bit | 0x72: KeyCode.DownArrow,
	E0Bit | 0x74: KeyCode.RightArrow,

	        0x77: KeyCode.NumLock,
	        0x6c: KeyCode.KP7,
	        0x6b: KeyCode.KP4,
	        0x69: KeyCode.KP1,
	E0Bit | 0x4a: KeyCode.KPSlash,
	        0x75: KeyCode.KP8,
	        0x73: KeyCode.KP5,
	        0x72: KeyCode.KP2,
	        0x70: KeyCode.KP0,
	        0x7c: KeyCode.KPStar,
	        0x7d: KeyCode.KP9,
	        0x74: KeyCode.KP6,
	        0x7a: KeyCode.KP3,
	        0x71: KeyCode.KPPeriod,
	        0x7b: KeyCode.KPMinus,
	        0x79: KeyCode.KPPlus,
	E0Bit | 0x5a: KeyCode.KPReturn,

	        0x76: KeyCode.Escape,
	        0x05: KeyCode.F1,
	        0x06: KeyCode.F2,
	        0x04: KeyCode.F3,
	        0x0c: KeyCode.F4,
	        0x03: KeyCode.F5,
	        0x0b: KeyCode.F6,
	        0x83: KeyCode.F7,
	        0x0a: KeyCode.F8,
	        0x01: KeyCode.F9,
	        0x09: KeyCode.F10,
	        0x78: KeyCode.F11,
	        0x07: KeyCode.F12,

	E0Bit | 0x7c: KeyCode.PrintScreen,
	        0x84: KeyCode.SysReq,
	        0x7e: KeyCode.ScrollLock,
	E1Bit | 0x77: KeyCode.Pause,

	E0Bit | 0x1f: KeyCode.LeftGUI,
	E0Bit | 0x27: KeyCode.RightGUI,
	E0Bit | 0x2f: KeyCode.Menu,
];

private __gshared dchar[KeyCode.max] NormalTranslationEN_US = [
	KeyCode.Escape: 27,
	KeyCode.GraveTilde: '`',
	KeyCode._1: '1',
	KeyCode._2: '2',
	KeyCode._3: '3',
	KeyCode._4: '4',
	KeyCode._5: '5',
	KeyCode._6: '6',
	KeyCode._7: '7',
	KeyCode._8: '8',
	KeyCode._9: '9',
	KeyCode._0: '0',
	KeyCode.Minus: '-',
	KeyCode.Equals: '=',
	KeyCode.Backspace: '\b',
	KeyCode.Tab: '\t',
	KeyCode.Q: 'q',
	KeyCode.W: 'w',
	KeyCode.E: 'e',
	KeyCode.R: 'r',
	KeyCode.T: 't',
	KeyCode.Y: 'y',
	KeyCode.U: 'u',
	KeyCode.I: 'i',
	KeyCode.O: 'o',
	KeyCode.P: 'p',
	KeyCode.SquareOpen: '[',
	KeyCode.SquareClose: ']',
	KeyCode.Backslash: '\\',
	KeyCode.A: 'a',
	KeyCode.S: 's',
	KeyCode.D: 'd',
	KeyCode.F: 'f',
	KeyCode.G: 'g',
	KeyCode.H: 'h',
	KeyCode.J: 'j',
	KeyCode.K: 'k',
	KeyCode.L: 'l',
	KeyCode.Semicolon: ';',
	KeyCode.Quote: '\'',
	KeyCode.Return: '\n',
	KeyCode.Z: 'z',
	KeyCode.X: 'x',
	KeyCode.C: 'c',
	KeyCode.V: 'v',
	KeyCode.B: 'b',
	KeyCode.N: 'n',
	KeyCode.M: 'm',
	KeyCode.Comma: ',',
	KeyCode.Dot: '.',
	KeyCode.Slash: '/',
	KeyCode.Space: ' '
];

private __gshared dchar[KeyCode.max] KeypadTranslationEN_US = [
	KeyCode.KP7: '7',
	KeyCode.KP4: '4',
	KeyCode.KP1: '1',
	KeyCode.KP8: '8',
	KeyCode.KP5: '5',
	KeyCode.KP2: '2',
	KeyCode.KP0: '0',
	KeyCode.KP9: '9',
	KeyCode.KP6: '6',
	KeyCode.KP3: '3',
	KeyCode.KPPeriod: ',',
	KeyCode.KPSlash: '/',
	KeyCode.KPStar: '*',
	KeyCode.KPMinus: '-',
	KeyCode.KPPlus: '+',
	KeyCode.KPReturn: '\n'
];

private __gshared dchar[KeyCode.max] ShiftedEtcTranslationEN_US = [
	KeyCode.GraveTilde: '~',
	KeyCode._1: '!',
	KeyCode._2: '@',
	KeyCode._3: '#',
	KeyCode._4: '$',
	KeyCode._5: '%',
	KeyCode._6: '^',
	KeyCode._7: '&',
	KeyCode._8: '*',
	KeyCode._9: '(',
	KeyCode._0: ')',
	KeyCode.Minus: '_',
	KeyCode.Equals: '+',
	KeyCode.SquareOpen: '{',
	KeyCode.SquareClose: '}',
	KeyCode.Backslash: '|',
	KeyCode.Semicolon: ':',
	KeyCode.Quote: '"',
	KeyCode.Comma: '<',
	KeyCode.Dot: '>',
	KeyCode.Slash: '?',
];

private __gshared dchar[KeyCode.max] ShiftedCharTranslationEN_US = [
	KeyCode.Q: 'Q',
	KeyCode.W: 'W',
	KeyCode.E: 'E',
	KeyCode.R: 'R',
	KeyCode.T: 'T',
	KeyCode.Y: 'Y',
	KeyCode.U: 'U',
	KeyCode.I: 'I',
	KeyCode.O: 'O',
	KeyCode.P: 'P',
	KeyCode.A: 'A',
	KeyCode.S: 'S',
	KeyCode.D: 'D',
	KeyCode.F: 'F',
	KeyCode.G: 'G',
	KeyCode.H: 'H',
	KeyCode.J: 'J',
	KeyCode.K: 'K',
	KeyCode.L: 'L',
	KeyCode.Z: 'Z',
	KeyCode.X: 'X',
	KeyCode.C: 'C',
	KeyCode.V: 'V',
	KeyCode.B: 'B',
	KeyCode.N: 'N',
	KeyCode.M: 'M',
];
// dfmt on
